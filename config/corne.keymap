#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

// layers
#define DEF     0
#define NUM     1
#define SYM     2
#define NAV     3
#define MOUSE   4
#define MEDIA   5
#define FUN     6

// Layer switching
#define NUM_BSC  &lt NUM   BSPC
#define SYM_ENT  &lt SYM   RET
#define NAV_DEL  &lt NAV   DEL
#define MSE_SPC  &lt MOUSE SPACE
#define MED_ESC  &lt MEDIA ESC
#define FUN_TAB  &lt FUN   TAB

// shorter codes
#define BPSTE    &kp  K_PASTE
#define BCPY     &kp  K_COPY
#define BCUT     &kp  K_CUT
#define BUNDO    &kp  K_UNDO
#define BREDO    &kp  K_REDO
#define BPREV    &kp  K_PREV
#define BNEXT    &kp  K_NEXT
#define BPLAYPSE &kp  K_PP
#define BMUTE    &kp  K_MUTE
#define BSTOP    &kp  K_STOP2
#define BVOLD    &kp  K_VOL_DN
#define BVOLU    &kp  K_VOL_UP
#define OUTTOG   &out OUT_TOG // toggle keyboard output bluetooth/usb
#define ___      &trans // transparent
#define _x_      &none

// Home row mods
#define HRML(k1, k2, k3, k4) &hm LSHFT k1 &hm LCTRL k2 &hm LALT  k3 &hm LGUI  k4
#define HRMR(k1, k2, k3, k4) &hm RGUI  k1 &hm RALT  k2 &hm RCTRL k3 &hm RSHFT k4

/ {
  chosen {
    zmk,matrix_transform = &five_column_transform;
  };
};

/ {
  behaviors {
    hm: homerow_mods_left {
        compatible = "zmk,behavior-hold-tap";
        label = "HOMEROW_MOD";
        #binding-cells = <2>;
        tapping-term-ms = <300>;
        quick-tap-ms = <250>;
        flavor = "tap-preferred";
        bindings = <&kp>, <&kp>;
    };
    bts0_cl: bt_sel0_clear {
      compatible = "zmk,behavior-mod-morph";
      label = "BT_SEL0_CLEAR";
      #binding-cells = <0>;
      bindings = <&bt BT_SEL 0>, <&bt BT_CLR>;
      mods = <(MOD_LSFT|MOD_RSFT)>;
    };
    bts1_cl: bt_sel1_clear {
      compatible = "zmk,behavior-mod-morph";
      label = "BT_SEL1_CLEAR";
      #binding-cells = <0>;
      bindings = <&bt BT_SEL 1>, <&bt BT_CLR>;
      mods = <(MOD_LSFT|MOD_RSFT)>;
    };
    bts2_cl: bt_sel2_clear {
      compatible = "zmk,behavior-mod-morph";
      label = "BT_SEL2_CLEAR";
      #binding-cells = <0>;
      bindings = <&bt BT_SEL 2>, <&bt BT_CLR>;
      mods = <(MOD_LSFT|MOD_RSFT)>;
    };
    bts3_cl: bt_sel3_clear {
      compatible = "zmk,behavior-mod-morph";
      label = "BT_SEL3_CLEAR";
      #binding-cells = <0>;
      bindings = <&bt BT_SEL 3>, <&bt BT_CLR>;
      mods = <(MOD_LSFT|MOD_RSFT)>;
    };
    bts4_cl: bt_sel4_clear {
      compatible = "zmk,behavior-mod-morph";
      label = "BT_SEL4_CLEAR";
      #binding-cells = <0>;
      bindings = <&bt BT_SEL 4>, <&bt BT_CLR>;
      mods = <(MOD_LSFT|MOD_RSFT)>;
    };
  };
  keymap {
    compatible = "zmk,keymap";
    default_layer { // layer 0 (default)
      bindings = <
// ╭─────────────────────────────────────────────────╮   ╭─────────────────────────────────────────────────╮
// │    Q    │    W    │    E    │    R    │    T    │   │    Y    │    U    │    I    │    O    │    P    │
    &kp Q     &kp W     &kp E     &kp R     &kp T         &kp Y     &kp U     &kp I     &kp O     &kp P
// ├─────────┼─────────┼─────────┼─────────┼─────────┤   ├─────────┼─────────┼─────────┼─────────┼─────────┤
// │    A    │    S    │    D    │    F    │    G    │   │    H    │    J    │    K    │    L    │    ;    │
    HRML(A,       S,        D,        F)    &kp G         &kp H     HRMR(J,       K,        L,       SEMI)
// ├─────────┼─────────┼─────────┼─────────┼─────────┤   ├─────────┼─────────┼─────────┼─────────┼─────────┤
// │    Z    │    X    │    C    │    V    │    B    │   │    N    │    M    │    ,    │    .    │    /    │
    &kp Z     &kp X     &kp C     &kp V     &kp B         &kp N     &kp M     &kp COMMA &kp DOT   &kp SLASH
// ╰─────────┼─────────┼─────────┼─────────┼─────────┤   ├─────────┼─────────┼─────────┼─────────┼─────────╯
//                     │ESC/Media│Del/Nav  │Spc/Mouse│   │ENT/Symbs│BKSP/Numb│TAB/Fun  │
                        MED_ESC   NAV_DEL   MSE_SPC       SYM_ENT   NUM_BSC   FUN_TAB
//                     ╰─────────────────────────────╯   ╰─────────────────────────────╯
      >;
    };
    number_layer { // layer 1 (numbers)
      bindings = <
// ╭─────────────────────────────────────────────────╮   ╭─────────────────────────────────────────────────╮
// │    [    │    7    │    8    │    9    │    ]    │   │   NOP   │   NOP   │   NOP   │   NOP   │   NOP   │
    &kp LBKT  &kp N7    &kp N8    &kp N9    &kp RBKT      _x_       _x_       _x_       _x_       _x_
// ├─────────┼─────────┼─────────┼─────────┼─────────┤   ├─────────┼─────────┼─────────┼─────────┼─────────┤
// │    ;    │    4    │    5    │    6    │    =    │   │   NOP   │  SUPER  │   ALT   │  CTRL   │  SHIFT  │
    &kp SEMI  &kp N4    &kp N5    &kp N6    &kp EQUAL     _x_       &kp RGUI  &kp RALT  &kp RCTRL  &kp RSHFT
// ├─────────┼─────────┼─────────┼─────────┼─────────┤   ├─────────┼─────────┼─────────┼─────────┼─────────┤
// │    `    │    1    │    2    │    3    │    \    │   │   NOP   │   NOP   │   NOP   │   NOP   │   NOP   │
    &kp TILDE &kp N1    &kp N2    &kp N3    &kp FSLH      _x_       _x_       _x_       _x_       _x_
// ╰─────────┼─────────┼─────────┼─────────┼─────────┤   ├─────────┼─────────┼─────────┼─────────┼─────────╯
//                     │    .    │    0    │    -    │   │   NOP   │   NOP   │   NOP   │
                        &kp DOT   &kp N0    &kp MINUS     _x_       ___       _x_
//                     ╰─────────────────────────────╯   ╰─────────────────────────────╯
      >;
    };

    symbol_layer { // layer 2 (symbols)
      bindings = <
// ╭─────────────────────────────────────────────────╮   ╭─────────────────────────────────────────────────╮
// │    {    │    &    │    *    │    (    │    }    │   │   NOP   │   NOP   │   NOP   │   NOP   │   NOP   │
    &kp LBRC  &kp AMPS  &kp STAR  &kp LPAR  &kp RBRC      _x_       _x_       _x_       _x_       _x_
// ├─────────┼─────────┼─────────┼─────────┼─────────┤   ├─────────┼─────────┼─────────┼─────────┼─────────┤
// │    :    │    $    │    %    │    ^    │    +    │   │   NOP   │  SUPER  │   ALT   │  CTRL   │  SHIFT  │
    &kp COLON &kp DLLR  &kp PRCNT &kp CARET &kp PLUS      _x_       &kp RGUI  &kp RALT  &kp RCTRL  &kp RSHFT
// ├─────────┼─────────┼─────────┼─────────┼─────────┤   ├─────────┼─────────┼─────────┼─────────┼─────────┤
// │    `    │    !    │    @    │    #    │    |    │   │   NOP   │   NOP   │   NOP   │   NOP   │   NOP   │
    &kp TILDE &kp EXCL  &kp AT    &kp HASH  &kp PIPE      _x_       _x_       _x_       _x_       _x_
// ╰─────────┼─────────┼─────────┼─────────┼─────────┤   ├─────────┼─────────┼─────────┼─────────┼─────────╯
//                     │    (    │    )    │    _    │   │   NOP   │   NOP   │   NOP   │
                        &kp LPAR  &kp RPAR  &kp UNDER     _x_       ___       _x_
//                     ╰─────────────────────────────╯   ╰─────────────────────────────╯
      >;
    };
    navigation_layer { // layer 3 (navigation)
      bindings = <
// ╭─────────────────────────────────────────────────╮   ╭─────────────────────────────────────────────────╮
// │   NOP   │   NOP   │   NOP   │   NOP   │   NOP   │   │   REDO  │  PASTE  │  COPY   │   CUT   │  UNDO   │
    _x_       _x_       _x_       _x_       _x_           BREDO     BPSTE     BCPY      BCUT      BUNDO
// ├─────────┼─────────┼─────────┼─────────┼─────────┤   ├─────────┼─────────┼─────────┼─────────┼─────────┤
// │ SHIFT   │  CTRL   │   ALT   │   SUPER │   NOP   │   │  LEFT   │  DOWN   │    UP   │  RIGHT  │   NOP   │
    &kp LSHFT &kp LCTRL  &kp LALT &kp LGUI  _x_           &kp LEFT  &kp DOWN  &kp UP    &kp RIGHT _x_
// ├─────────┼─────────┼─────────┼─────────┼─────────┤   ├─────────┼─────────┼─────────┼─────────┼─────────┤
// │   NOP   │   NOP   │   NOP   │   NOP   │   NOP   │   │  INSERT │  HOME   │  PGDN   │   PGUP  │   END   │
    _x_       _x_       _x_       _x_       _x_           &kp INS   &kp HOME  &kp PG_DN &kp PG_UP  &kp END
// ╰─────────┼─────────┼─────────┼─────────┼─────────┤   ├─────────┼─────────┼─────────┼─────────┼─────────╯
//                     │   NOP   │   NOP   │   NOP   │   │   RET   │ BACKSPAC│  DELETE │
                        _x_       ___       _x_           &kp RET   &kp BSPC  &kp DEL
//                     ╰─────────────────────────────╯   ╰─────────────────────────────╯
      >;
    };
    mouse_layer { // layer 4 (mouse) | zmk currently does not support mouse keys, so this is a duplicate of navigation layer
      bindings = <
// ╭─────────────────────────────────────────────────╮   ╭─────────────────────────────────────────────────╮
// │   NOP   │   NOP   │   NOP   │   NOP   │   NOP   │   │   REDO  │  PASTE  │  COPY   │   CUT   │  UNDO   │
    _x_       _x_       _x_       _x_       _x_           BREDO     BPSTE     BCPY      BCUT      BUNDO
// ├─────────┼─────────┼─────────┼─────────┼─────────┤   ├─────────┼─────────┼─────────┼─────────┼─────────┤
// │ SHIFT   │  CTRL   │   ALT   │   SUPER │   NOP   │   │   NOP   │  LEFT   │  DOWN   │    UP   │  RIGHT  │
    &kp LSHFT &kp LCTRL  &kp LALT &kp LGUI  _x_           _x_       &kp LEFT  &kp DOWN  &kp UP    &kp RIGHT
// ├─────────┼─────────┼─────────┼─────────┼─────────┤   ├─────────┼─────────┼─────────┼─────────┼─────────┤
// │   NOP   │   NOP   │   NOP   │   NOP   │   NOP   │   │   NOP   │  HOME   │  PGDN   │   PGUP  │   END   │
    _x_       _x_       _x_       _x_       _x_           &kp INS   &kp HOME  &kp PG_DN &kp PG_UP  &kp END
// ╰─────────┼─────────┼─────────┼─────────┼─────────┤   ├─────────┼─────────┼─────────┼─────────┼─────────╯
//                     │   NOP   │   NOP   │   NOP   │   │   RET   │ BACKSPAC│  DELETE │
                        _x_       ___       _x_           &kp RET   &kp BSPC  &kp DEL
//                     ╰─────────────────────────────╯   ╰─────────────────────────────╯
      >;
    };
    media_layer { // layer 5 (media)
      bindings = <
// ╭─────────────────────────────────────────────────╮   ╭─────────────────────────────────────────────────╮
// │   NOP   │   NOP   │   NOP   │   NOP   │   NOP   │   │   NOP   │   NOP   │   NOP   │   NOP   │   NOP   │
    _x_       _x_       _x_       _x_       _x_           _x_       _x_       _x_       _x_       _x_
// ├─────────┼─────────┼─────────┼─────────┼─────────┤   ├─────────┼─────────┼─────────┼─────────┼─────────┤
// │ SHIFT   │  CTRL   │   ALT   │   SUPER │   NOP   │   │   NOP   │PREV_TRCK│ VOl_DOWN│  VOL_UP │NEXT_TRCK│
    &kp LSHFT &kp LCTRL  &kp LALT &kp LGUI  _x_           _x_       BPREV     BVOLD     BVOLU     BNEXT
// ├─────────┼─────────┼─────────┼─────────┼─────────┤   ├─────────┼─────────┼─────────┼─────────┼─────────┤
// │   NOP   │   NOP   │   NOP   │   NOP   │   NOP   │   │BTPROF 0 │BTPROF 1 │BTPROF 2 │BTPROF 3 │BTROF 4  │// shift to clear profile
    _x_       _x_       _x_       &bt BT_CLR _x_          &bts0_cl  &bts1_cl  &bts2_cl  &bts3_cl  &bts4_cl
// ╰─────────┼─────────┼─────────┼─────────┼─────────┤   ├─────────┼─────────┼─────────┼─────────┼─────────╯
//                     │   NOP   │   NOP   │   NOP   │   │  STOP   │Pause/Ply│  MUTE   │
                        ___       _x_       _x_           BSTOP     BPLAYPSE  BMUTE
//                     ╰─────────────────────────────╯   ╰─────────────────────────────╯
      >;
    };
    function_layer { // layer 6 (function)
      bindings = <
// ╭─────────────────────────────────────────────────╮   ╭─────────────────────────────────────────────────╮
// │   F12   │   F7    │   F8    │   F9    │   NOP   │   │   NOP   │   NOP   │   NOP   │   NOP   │   NOP   │
    &kp F12   &kp F7    &kp F8    &kp F9    _x_           _x_       _x_       _x_       _x_       _x_
// ├─────────┼─────────┼─────────┼─────────┼─────────┤   ├─────────┼─────────┼─────────┼─────────┼─────────┤
// │   F11   │   F4    │   F5    │   F6    │   NOP   │   │   NOP   │  SUPER  │   ALT   │  CTRL   │  SHIFT  │
    &kp F11   &kp F4    &kp F5    &kp F6    _x_           _x_       &kp RGUI  &kp RALT  &kp RCTRL  &kp RSHFT
// ├─────────┼─────────┼─────────┼─────────┼─────────┤   ├─────────┼─────────┼─────────┼─────────┼─────────┤
// │   F10   │   F1    │   F2    │   F3    │   NOP   │   │   NOP   │   NOP   │   NOP   │   NOP   │   NOP   │
    &kp F10   &kp F1    &kp F2    &kp F3    _x_           _x_       _x_       _x_       _x_       _x_
// ╰─────────┼─────────┼─────────┼─────────┼─────────┤   ├─────────┼─────────┼─────────┼─────────┼─────────╯
//                     │   APP   │  SPACE  │   TAB   │   │   NOP   │   NOP   │   NOP   │
                        &kp K_APP &kp SPACE &kp TAB       _x_       _x_       ___
//                     ╰─────────────────────────────╯   ╰─────────────────────────────╯
      >;
    };

  };
};

// vim:ft=cpp
